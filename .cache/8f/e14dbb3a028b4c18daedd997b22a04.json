{"id":"D8MI","dependencies":[{"name":"/Users/ilyalibin/Dev/granola/package.json","includedInParent":true,"mtime":1584052891513},{"name":"/Users/ilyalibin/Dev/granola/node_modules/@ndhoule/foldl/package.json","includedInParent":true,"mtime":1583993205695},{"name":"@ndhoule/each","loc":{"line":7,"column":19},"parent":"/Users/ilyalibin/Dev/granola/node_modules/@ndhoule/foldl/index.js","resolved":"/Users/ilyalibin/Dev/granola/node_modules/@ndhoule/each/index.js"}],"generated":{"js":"\"use strict\";var e=require(\"@ndhoule/each\"),t=function(t,r,n){if(\"function\"!=typeof t)throw new TypeError(\"Expected a function but received a \"+typeof t);return e(function(e,n,o){r=t(r,e,n,o)},n),r};module.exports=t;"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/@ndhoule/foldl/index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/@ndhoule/foldl/index.js","original":{"line":7,"column":0},"generated":{"line":1,"column":13}},{"source":"node_modules/@ndhoule/foldl/index.js","original":{"line":7,"column":0},"generated":{"line":1,"column":17}},{"source":"node_modules/@ndhoule/foldl/index.js","original":{"line":7,"column":0},"generated":{"line":1,"column":19}},{"source":"node_modules/@ndhoule/foldl/index.js","original":{"line":7,"column":0},"generated":{"line":1,"column":27}},{"source":"node_modules/@ndhoule/foldl/index.js","original":{"line":38,"column":0},"generated":{"line":1,"column":44}},{"source":"node_modules/@ndhoule/foldl/index.js","original":{"line":38,"column":0},"generated":{"line":1,"column":46}},{"source":"node_modules/@ndhoule/foldl/index.js","original":{"line":38,"column":0},"generated":{"line":1,"column":55}},{"source":"node_modules/@ndhoule/foldl/index.js","original":{"line":38,"column":0},"generated":{"line":1,"column":57}},{"source":"node_modules/@ndhoule/foldl/index.js","original":{"line":38,"column":0},"generated":{"line":1,"column":59}},{"source":"node_modules/@ndhoule/foldl/index.js","original":{"line":39,"column":0},"generated":{"line":1,"column":62}},{"source":"node_modules/@ndhoule/foldl/index.js","original":{"line":39,"column":0},"generated":{"line":1,"column":65}},{"source":"node_modules/@ndhoule/foldl/index.js","original":{"line":39,"column":0},"generated":{"line":1,"column":84}},{"source":"node_modules/@ndhoule/foldl/index.js","original":{"line":40,"column":0},"generated":{"line":1,"column":86}},{"source":"node_modules/@ndhoule/foldl/index.js","original":{"line":40,"column":0},"generated":{"line":1,"column":92}},{"source":"node_modules/@ndhoule/foldl/index.js","original":{"line":40,"column":0},"generated":{"line":1,"column":96}},{"source":"node_modules/@ndhoule/foldl/index.js","original":{"line":40,"column":0},"generated":{"line":1,"column":106}},{"source":"node_modules/@ndhoule/foldl/index.js","original":{"line":40,"column":0},"generated":{"line":1,"column":151}},{"source":"node_modules/@ndhoule/foldl/index.js","original":{"line":47,"column":0},"generated":{"line":1,"column":154}},{"source":"node_modules/@ndhoule/foldl/index.js","original":{"line":43,"column":0},"generated":{"line":1,"column":161}},{"source":"node_modules/@ndhoule/foldl/index.js","original":{"line":43,"column":0},"generated":{"line":1,"column":163}},{"source":"node_modules/@ndhoule/foldl/index.js","original":{"line":43,"column":0},"generated":{"line":1,"column":172}},{"source":"node_modules/@ndhoule/foldl/index.js","original":{"line":43,"column":0},"generated":{"line":1,"column":174}},{"source":"node_modules/@ndhoule/foldl/index.js","original":{"line":43,"column":0},"generated":{"line":1,"column":176}},{"source":"node_modules/@ndhoule/foldl/index.js","original":{"line":44,"column":0},"generated":{"line":1,"column":179}},{"source":"node_modules/@ndhoule/foldl/index.js","original":{"line":44,"column":0},"generated":{"line":1,"column":181}},{"source":"node_modules/@ndhoule/foldl/index.js","original":{"line":44,"column":0},"generated":{"line":1,"column":183}},{"source":"node_modules/@ndhoule/foldl/index.js","original":{"line":44,"column":0},"generated":{"line":1,"column":185}},{"source":"node_modules/@ndhoule/foldl/index.js","original":{"line":44,"column":0},"generated":{"line":1,"column":187}},{"source":"node_modules/@ndhoule/foldl/index.js","original":{"line":44,"column":0},"generated":{"line":1,"column":189}},{"source":"node_modules/@ndhoule/foldl/index.js","original":{"line":45,"column":0},"generated":{"line":1,"column":193}},{"source":"node_modules/@ndhoule/foldl/index.js","original":{"line":47,"column":0},"generated":{"line":1,"column":196}},{"source":"node_modules/@ndhoule/foldl/index.js","original":{"line":54,"column":0},"generated":{"line":1,"column":199}},{"source":"node_modules/@ndhoule/foldl/index.js","original":{"line":54,"column":0},"generated":{"line":1,"column":206}},{"source":"node_modules/@ndhoule/foldl/index.js","original":{"line":54,"column":0},"generated":{"line":1,"column":214}}],"sources":{"node_modules/@ndhoule/foldl/index.js":"'use strict';\n\n/*\n * Module dependencies.\n */\n\nvar each = require('@ndhoule/each');\n\n/**\n * Reduces all the values in a collection down into a single value. Does so by iterating through the\n * collection from left to right, repeatedly calling an `iterator` function and passing to it four\n * arguments: `(accumulator, value, index, collection)`.\n *\n * Returns the final return value of the `iterator` function.\n *\n * @name foldl\n * @api public\n * @param {Function} iterator The function to invoke per iteration.\n * @param {*} accumulator The initial accumulator value, passed to the first invocation of `iterator`.\n * @param {Array|Object} collection The collection to iterate over.\n * @return {*} The return value of the final call to `iterator`.\n * @example\n * foldl(function(total, n) {\n *   return total + n;\n * }, 0, [1, 2, 3]);\n * //=> 6\n *\n * var phonebook = { bob: '555-111-2345', tim: '655-222-6789', sheila: '655-333-1298' };\n *\n * foldl(function(results, phoneNumber) {\n *  if (phoneNumber[0] === '6') {\n *    return results.concat(phoneNumber);\n *  }\n *  return results;\n * }, [], phonebook);\n * // => ['655-222-6789', '655-333-1298']\n */\nvar foldl = function foldl(iterator, accumulator, collection) {\n  if (typeof iterator !== 'function') {\n    throw new TypeError('Expected a function but received a ' + typeof iterator);\n  }\n\n  each(function(val, i, collection) {\n    accumulator = iterator(accumulator, val, i, collection);\n  }, collection);\n\n  return accumulator;\n};\n\n/*\n * Exports.\n */\n\nmodule.exports = foldl;\n"},"lineCount":null}},"error":null,"hash":"1bfacd3efaf453caff49a1d7148ddd59","cacheData":{"env":{}}}